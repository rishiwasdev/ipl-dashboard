{"version":3,"sources":["components/TeamTile.js","pages/HomePage.js","components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","App.js","reportWebVitals.js","index.js"],"names":["TeamTile","teamName","className","to","HomePage","useState","teams","setTeams","useEffect","a","fetch","response","json","data","console","log","fetchTeams","map","team","id","MatchDetailCard","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","matches","setTeam","useParams","fetchTeam","title","value","totalMatches","totalWins","color","slice","process","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","length","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da499594.chunk.js","sourcesContent":["import { React } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport './TeamTile.scss'\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n","import { React, useEffect, useState } from \"react\";\r\n\r\nimport './HomePage.scss'\r\nimport { TeamTile } from \"../components/TeamTile\";\r\n  \r\nexport const HomePage = () => {\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  useEffect(\r\n    () => {\r\n      const fetchTeams = async () => {\r\n        const response = await fetch(`http://localhost:8080/teams`);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setTeams(data);\r\n      }\r\n      fetchTeams();\r\n    }, [] // without array [], it keeps calling API\r\n  );\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header-section\">\r\n        <h1 className=\"app-name\">IPL Dashboard</h1>\r\n      </div>\r\n      <div className=\"team-grid\">\r\n        {teams.map(team => <TeamTile  key={team.id} teamName={team.teamName} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { Link } from 'react-router-dom';\r\nimport \"./MatchDetailCard.scss\"\r\n\r\nexport const MatchDetailCard = ({ teamName, match }) => {\r\n  if (!match)\r\n    return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <h2 className=\"match-date\">on {match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the Match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1}, {match.umpire2}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n }","import { Link } from 'react-router-dom';\r\nimport './MatchSmallCard.scss'\r\n\r\nexport const MatchSmallCard = ({ teamName, match }) => {\r\n  if (!match)\r\n    return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n      <span className=\"vs\">vs</span>\r\n      <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n      <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n  </div>\r\n  );\r\n}","import { React, useEffect, useState } from \"react\";\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\r\nimport { MatchSmallCard } from \"../components/MatchSmallCard\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nimport './TeamPage.scss'\r\n  \r\nexport const TeamPage = () => {\r\n  const [team, setTeam] = useState({ matches: [] });\r\n  const { teamName } = useParams();\r\n\r\n  useEffect(\r\n    () => {\r\n      const fetchTeam = async () => {\r\n        const response = await fetch(`http://localhost:8080/teams/${teamName}`);\r\n        const data = await response.json();\r\n        setTeam(data);\r\n      }\r\n      fetchTeam();\r\n    }, [teamName] // call the hook when 'teamName' changes (without array [], it keeps calling API)\r\n  );\r\n\r\n  if (!team || !team.teamName) {\r\n    return <h1>Team not found</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n      <div className=\"win-loss-section\">\r\n        Wins / Losses\r\n        <PieChart\r\n          data={[\r\n            { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n            { title: 'Wins', value: team.totalWins, color: '#4da375' }\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className=\"match-detail-section\">\r\n        <h3>Latest Matches</h3> {/* <h4>Match Details</h4> */}\r\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />   {/* ONLY first match REQUIRED for small card */}\r\n      </div>\r\n\r\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}   {/* first match NOT REQUIRED for small card */}\r\n      <div className=\"more-link\">\r\n      <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            {\r\n                years.map(year => (\r\n                <li key={year}>\r\n                    <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    );\r\n};","import { React, useEffect, useState } from \"react\";\r\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\r\nimport { useParams } from 'react-router-dom';\r\nimport './MatchPage.scss';\r\nimport { YearSelector } from \"../components/YearSelector\";\r\n\r\nexport const MatchPage = () => {\r\n  const [matches, setMatches] = useState([]);\r\n  const { teamName, year } = useParams();\r\n\r\n  useEffect(\r\n    () => {\r\n      const fetchMatches = async () => {\r\n        const response = await fetch(`http://localhost:8080/teams/${teamName}/matches?year=${year}`);\r\n        const data = await response.json();\r\n        setMatches(data);\r\n      }\r\n      fetchMatches();\r\n    }, [teamName, year] // without array [], it keeps calling API\r\n  );\r\n\r\n  if (!matches && matches.length === 0) {\r\n    return <h1>Matches detail not found</h1>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"year-selector\">\r\n        <h3>Select Year</h3>\r\n        <YearSelector teamName={ teamName}/>\r\n      </div>\r\n      <div>\r\n        <h1 className=\"page-heading\">{teamName} - matches in {year}:</h1>\r\n        {matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}